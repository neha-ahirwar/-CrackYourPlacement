//Not using extra space just modifying the pointers only
class Solution {
public:
    void copyList(Node* head) {    //we made this
        Node*temp=head,*n=head->next;

        while(temp)  // or while(temp!=NULL)
        {
            Node* copy= new Node(temp->val);
            temp->next=copy;
            copy->next=n;
            temp=n;
            if(n!=NULL)n=n->next;
        }
    }

    void handleRandom(Node* head)
    {
        Node* temp=head;
        while(temp)
        {
            if(temp->random)   //or if(temp->random!=NULL)
            temp->next->random=temp->random->next;
            temp= temp->next->next;
        }
    }

    Node* detach(Node* head)
    {
        Node* dummy= new Node(-1);
        Node* tail= dummy,*temp=head;

        while(temp)
        {
            tail->next= temp->next;
            tail= tail->next;
            temp->next=tail->next;
            temp=temp->next;
        }
        return dummy->next;
    }

    Node* copyRandomList(Node* head)
    {
        if(head==NULL)return NULL;
        copyList(head);
        handleRandom(head);
        return detach(head);
    }
};


/*
//Using extra space through map
class Solution {
public:
    Node* copyRandomList(Node* head) {
        
        map<Node*, Node*> m;
        Node* temp=head;
        while(temp!=NULL)
        {
            Node* copy= new Node(temp->val);
            m[temp]=copy;
            temp= temp->next;
        }

        temp=head;
        while(temp!=NULL)
        {
            m[temp] -> next= m[temp->next];
            m[temp] ->random= m[temp->random];
            temp= temp->next;  //If does not put this line it gives Run Time Exceeded Error
        }
        return m[head];
    }
};

*/
